import React, { useState} from "react";
import Head from 'next/head'
import { Container, Button, Modal } from 'react-bootstrap'
import Sidebar from '../components/Sidebar'
import DashBoardHeader from '../components/DashBoardHeader'
import { MdAdd } from "react-icons/md";
import styles from '../styles/dashboard.module.scss'
import OrderView from "@/components/order_tables/OrderView";
import RequestsView from "@/components/order_tables/RequestsView";
import ImageOrderCreationModal from "../components/order_creation_modals/ImageOrderCreationModal";
import { Box, Tab, Tabs, Select, InputLabel, MenuItem, FormControl, Chip } from "@mui/material";

export default function ImageOrders() {
  const [requestViewOrderIds, setRequestViewOrderIds] = useState([])
  const preselectedOrderRows = React.useRef([]);
  const [showModal, setShowModal] = useState(false);
  const [tab, setTab] = useState(0);
  
  let onSelectionChanged = React.useCallback((selectedRows) => {
    setRequestViewOrderIds(selectedRows.map(row => row.id))
    preselectedOrderRows.current = selectedRows
  }, [])

  return (
    <>
      <Head>
        <title>dashboard</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className='dashboard'>
        <Sidebar/>
        <DashBoardHeader />
        <div className="dashboardContent">
          <div className={styles.dashboardMainContent}>
            <Container className={styles.container}>
              <div>
                <div style={{ display: "flex", justifyContent: "flex-end" }}>
                  <Button type="button" className={styles.maintenanceOrderCreateBtn} onClick={() => setShowModal(true)}><MdAdd /> CREATE IMAGE ORDER</Button>
                </div>
                <div style={{ overflowX: "scroll", whiteSpace: "nowrap", display: "flex", alignItems: "center" }}>
                  {requestViewOrderIds.map((id) => (
                    <Chip key={id} label={`order #${id}`} style={{ margin: "5px" }} />
                  ))}
                </div>
              </div>
              <Box sx={{ width: "100%", marginBottom: "15px" }}>
                <Box sx={{ borderBottom: 1, borderColor: "divider" }}>
                  <Tabs value={tab} onChange={(_, value) => setTab(value)} aria-label="Tabs">
                    <Tab label="Image Orders" />
                    <Tab label="Schedule Requests" />
                  </Tabs>
                </Box>
              </Box>
              <Box sx={{ width: "100%", marginBottom: "15px" }}>
                {tab === 0 && <OrderView orderType="imaging" preselectedRows={preselectedOrderRows.current} onSelectionChanged={onSelectionChanged}/>} 
                {tab === 1 && <RequestsView orderType="imaging" orderIds={requestViewOrderIds}/>}
              </Box>
            </Container>
          </div>
        </div>
      </main>
      <ImageOrderCreationModal
        showModal={showModal} 
        setShowModal={setShowModal}
      />
    </>
  )
}